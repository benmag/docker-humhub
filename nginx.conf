user www-data;
worker_processes  1;
pid /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log   /dev/stdout   main_timed;
    error_log    /dev/stderr   info;

    keepalive_timeout     65;
    client_max_body_size  20M;

    map $http_x_forwarded_proto $fastcgi_https { 
        default off; 
        https on; 
    }

    server {

        listen 80;
        listen 443;

        sendfile off;

        root @{{DOCUMENT_ROOT}}; 
        index index.php index.html;

        @{{HTACCESS_CONFIG}}

        location / {

            proxy_redirect    off;

            proxy_set_header      Host                $http_host;
            proxy_set_header      X-Forwarded-Proto   $scheme;
            proxy_set_header      X-Real-IP           $remote_addr;
            proxy_set_header      X-Forwarded-For     $proxy_add_x_forwarded_for;

            if (!-e $request_filename) {
                rewrite ^/(.*) /index.php?query=$1 last;
            }

        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ [^/]\.php(/|$) {
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png|ttf|woff)$ {
            access_log off;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public, mustrevalidate, proxy-revalidate";
        }

        location ~ /\. {
            log_not_found off;
            deny all;
        }

        location /protected {
            deny all;
        }

        location /uploads/file {
            deny all;
        }

        location ~ @{{DENIED_FILES}} {
          deny all;
        }
    }

}

